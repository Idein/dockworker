version: 2
jobs:
  build_image:
    working_directory: /tmp/dockworker
    machine:
      image: circleci/classic:201808-01
    steps:
      - checkout
      - run:
          name: Build the docker container
          command: |
            docker-compose build iostream
            docker save -o test-iostream test-iostream:latest

      - persist_to_workspace:
          root: /tmp/dockworker
          paths:
            - test-iostream

  build:
    working_directory: /tmp/dockworker
    docker:
      - image: idein/rust-stable:1.25.0
        environment:
          OS_VERSION: xenial
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: /tmp/dockworker
      - run: apt-get update -y && apt-get install -y docker.io libssl-dev docker-compose --no-install-recommends
      - run:
          name: Generate cache key
          command: |
            cat Cargo.toml Cargo.lock > /tmp/build-dep
            rustc --version >> /tmp/build-dep
            echo $OS_VERSION >> /tmp/build-dep
            apt list --installed >> /tmp/build-dep
      - restore_cache:
          key: cache-cargo-target-{{ .Environment.CIRCLE_JOB }}-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ checksum "/tmp/build-dep" }}
      - run:
          name: Checking source code style
          command: cargo fmt -- --write-mode "diff"
      - run:
          name: Build project
          command: RUST_BACKTRACE=1 cargo build --verbose --features ssl
      - run:
          name: Unit testing
          command: RUST_BACKTRACE=1 cargo test --verbose --features ssl
      - run:
          name: More unit testing
          command: |
            docker load -i test-iostream
            RUST_BACKTRACE=1 cargo test --verbose --features ssl -- --ignored
      - save_cache:
          key: cache-cargo-target-{{ .Environment.CIRCLE_JOB }}-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ checksum "/tmp/build-dep" }}
          paths:
            - ~/.cargo/registry/
            - target/debug

workflows:
  version: 2
  build_and_test:
    jobs:
      - build:
          requires:
            - build_image
      - build_image
 
